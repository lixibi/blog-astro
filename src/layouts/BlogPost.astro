---
import { type CollectionEntry, render } from "astro:content";

import Masthead from "@/components/blog/Masthead.astro";
import TOC from "@/components/blog/TOC.astro";
import WebMentions from "@/components/blog/webmentions/index.astro";

import BaseLayout from "./Base.astro";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const { ogImage, title, description, updatedDate, publishDate } = post.data;
const socialImage = ogImage ?? `/og-image/${post.id}.png`;
const articleDate = updatedDate?.toISOString() ?? publishDate.toISOString();
const { headings } = await render(post);
---

<BaseLayout
	meta={{
		articleDate,
		description,
		ogImage: socialImage,
		title,
	}}
>
	<!-- 优化的文章banner - Han-bai-yu主题 -->
	<div class="mb-8">
		<div class="mx-auto max-w-4xl">
			<!-- 返回导航 -->
			<div class="mb-6">
				<a
					href="/posts/"
					class="text-text-muted group inline-flex items-center gap-2 text-sm transition-colors hover:text-accent"
				>
					<svg
						class="h-4 w-4 transition-transform group-hover:-translate-x-1"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M15 19l-7-7 7-7"></path>
					</svg>
					返回文章列表
				</a>
			</div>

			<!-- 文章头部信息卡片 -->
			<div class="hanbayu-card p-6 sm:p-8">
				<div class="space-y-4">
					<!-- 文章标题 -->
					<h1 class="title text-2xl leading-tight text-accent-2 sm:text-3xl lg:text-4xl">
						{title}
					</h1>

					<!-- 文章简介 -->
					<div class="prose prose-lg max-w-none">
						<p
							class="text-text-muted text-base leading-relaxed sm:text-lg"
							style="text-indent: 2em; margin: 0;"
						>
							{description}
						</p>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="gap-x-10 lg:flex lg:items-start">
		{!!headings.length && <TOC headings={headings} />}
		<article class="flex-grow break-words" data-pagefind-body>
			<div id="blog-hero"><Masthead content={post} /></div>
			<!-- 宽屏优化：文章内容区域渐进式宽度扩展 -->
			<div
				class="prose prose-lg prose-cactus mt-12 max-w-4xl prose-headings:font-semibold prose-headings:text-accent-2 prose-headings:before:absolute prose-headings:before:-ms-4 prose-headings:before:text-accent prose-code:font-mono prose-pre:font-mono sm:prose-headings:before:content-['#'] sm:prose-th:before:content-none xl:max-w-5xl 2xl:max-w-6xl"
			>
				<slot />
				<WebMentions />
			</div>
		</article>
	</div>
	<button
		aria-label="Back to Top"
		class="z-90 fixed bottom-8 end-4 flex h-10 w-10 translate-y-28 items-center justify-center rounded-full border-2 border-transparent bg-zinc-200 text-3xl opacity-0 transition-all duration-300 hover:border-link data-[show=true]:translate-y-0 data-[show=true]:opacity-100 dark:bg-zinc-700 sm:end-8 sm:h-12 sm:w-12"
		data-show="false"
		id="to-top-btn"
		><svg
			aria-hidden="true"
			class="h-6 w-6"
			fill="none"
			focusable="false"
			stroke="currentColor"
			stroke-width="2"
			viewBox="0 0 24 24"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path d="M4.5 15.75l7.5-7.5 7.5 7.5" stroke-linecap="round" stroke-linejoin="round"></path>
		</svg>
	</button>
</BaseLayout>

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>
