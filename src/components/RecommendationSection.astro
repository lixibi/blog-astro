---
import { type CollectionEntry, getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

// 获取推荐内容（如果有的话）
let recommendations: CollectionEntry<"recommendation">[] = [];
try {
	const allRecommendations = await getCollection("recommendation");
	recommendations = allRecommendations.slice(0, 6); // 只显示前6个
} catch (error) {
	// 如果没有推荐内容，使用示例数据
	console.log("No recommendations found, using sample data:", error);
	recommendations = [];
}

// 获取读书笔记文章
let bookPosts: CollectionEntry<"post">[] = [];
try {
	const allPosts = await getCollection("post");
	// 筛选带有"读书"标签的文章，按发布日期排序，取最新的6篇
	bookPosts = allPosts
		.filter(post => post.data.tags.includes("读书"))
		.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
		.slice(0, 6);
} catch (error) {
	console.log("No book posts found:", error);
	bookPosts = [];
}

// 将读书笔记转换为推荐格式
const bookRecommendations = bookPosts.map(post => {
	// 从标题中提取书名（去掉"读书笔记"等后缀）
	const bookTitle = post.data.title
		.replace(/读书笔记.*$/, '')
		.replace(/：.*$/, '')
		.replace(/—.*$/, '')
		.trim();

	// 从描述中提取核心内容作为推荐理由
	const description = post.data.description.length > 80
		? post.data.description.substring(0, 80) + "..."
		: post.data.description;

	// 生成个人笔记摘要
	const note = `${new Date(post.data.publishDate).getFullYear()}年读完，深有感触`;

	return {
		title: bookTitle,
		type: "book" as const,
		author: "", // 从文章内容中可能无法直接获取作者信息
		rating: 9, // 默认评分，表示推荐
		description: description,
		tags: post.data.tags.filter(tag => tag !== "读书" && tag !== "笔记"),
		note: note,
		id: post.id,
		url: `/posts/${post.id}/` // 添加链接到原文章
	};
});

// 精选推荐示例数据（作为补充）
const sampleRecommendations = [
	{
		title: "《代码大全》",
		type: "book",
		author: "史蒂夫·迈克康奈尔",
		rating: 9,
		description: "软件开发的经典之作，全面覆盖软件构建的各个方面，是每个程序员必读的经典。",
		tags: ["编程", "软件工程", "技术"],
		note: "深入浅出，实用性强",
		url: undefined // 示例数据没有链接
	},
	{
		title: "《黑客帝国》",
		type: "movie",
		author: "沃卓斯基姐妹",
		rating: 8,
		description: "经典科幻电影，探讨现实与虚拟的边界，引发对人工智能和现实本质的思考。",
		tags: ["科幻", "哲学", "AI"],
		note: "视觉震撼，思想深刻",
		url: undefined // 示例数据没有链接
	}
];

// 类型配置 - 汉白玉主题增强层次配色
const typeConfig = {
	book: {
		icon: "mdi:book",
		label: "书籍",
		color: "text-link",
		bgColor: "bg-bg-elevated",
		borderColor: "border-border-subtle"
	},
	movie: {
		icon: "mdi:movie",
		label: "电影",
		color: "text-link",
		bgColor: "bg-bg-elevated",
		borderColor: "border-border-subtle"
	},
	tv: {
		icon: "mdi:television",
		label: "剧集",
		color: "text-link",
		bgColor: "bg-bg-elevated",
		borderColor: "border-border-subtle"
	},
	documentary: {
		icon: "mdi:video",
		label: "纪录片",
		color: "text-link",
		bgColor: "bg-bg-elevated",
		borderColor: "border-border-subtle"
	}
};

// 合并推荐数据：优先使用读书笔记，然后是推荐集合，最后是示例数据
let displayRecommendations = [];

if (bookRecommendations.length > 0) {
	// 使用读书笔记数据
	displayRecommendations = bookRecommendations;
} else if (recommendations.length > 0) {
	// 使用推荐集合数据
	displayRecommendations = recommendations.map((rec: any) => ({
		title: rec.data.title,
		type: rec.data.type,
		author: rec.data.author,
		rating: rec.data.rating,
		description: rec.data.description,
		tags: rec.data.tags,
		note: rec.data.note || "",
		id: rec.id,
		url: undefined // 推荐集合数据没有链接
	}));
} else {
	// 使用示例数据作为后备
	displayRecommendations = sampleRecommendations;
}

// 限制显示数量为6个
displayRecommendations = displayRecommendations.slice(0, 6);
---

<section class="mb-8">
	<!-- 精选推荐标题 - 简洁风格 -->
	<h2 class="title mb-6 text-xl text-accent">书影推荐</h2>

	<!-- 增强层次的网格布局 - 宽屏优化：更多推荐展示 -->
	<div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6">
		{displayRecommendations.map((item) => {
			const config = typeConfig[item.type as keyof typeof typeConfig];
			const isBookPost = item.url; // 判断是否为读书笔记文章

			return (
				<div class="hanbayu-card group p-4">
					<!-- 增强的封面区域 -->
					<div class="hanbayu-card-small mb-3 flex items-center justify-center p-4">
						<Icon name={config.icon} class={`h-8 w-8 ${config.color}`} />
					</div>

					<!-- 内容信息 -->
					<div class="space-y-2">
						<!-- 标题和类型 -->
						<div class="text-center">
							<span class={`text-xs ${config.color} bg-bg-muted border border-border-subtle px-2 py-1 rounded-full`}>
								{config.label}
							</span>
							{isBookPost ? (
								<a href={item.url} class="hanbayu-link">
									<h3 class="mt-2 font-semibold text-accent-2 text-sm line-clamp-2 hover:text-accent transition-colors">
										{item.title}
									</h3>
								</a>
							) : (
								<h3 class="mt-2 font-semibold text-accent-2 text-sm line-clamp-2">
									{item.title}
								</h3>
							)}
						</div>

						<!-- 作者/导演 -->
						{item.author && (
							<p class="text-xs text-text-muted text-center">
								{item.author}
							</p>
						)}

						<!-- 评分 -->
						{item.rating && (
							<div class="flex items-center justify-center space-x-1">
								<Icon name="mdi:star" class="h-3 w-3 text-link" />
								<span class="text-xs font-medium text-text-muted">
									{item.rating}/10
								</span>
							</div>
						)}

						<!-- 描述 -->
						<p class="line-clamp-2 text-xs text-textColor text-center">
							{item.description}
						</p>

						<!-- 读书笔记/观后感 -->
						{item.note && (
							<div class="mt-2 rounded-lg bg-bg-muted border border-border-subtle p-2">
								<p class="text-xs text-text-muted italic text-center">
									"{item.note}"
								</p>
							</div>
						)}

						<!-- 标签 -->
						{item.tags && item.tags.length > 0 && (
							<div class="flex flex-wrap gap-1 justify-center">
								{item.tags.slice(0, 2).map((tag: string) => (
									<span class="rounded-full bg-bg-muted border border-border-subtle px-2 py-1 text-xs text-text-muted">
										{tag}
									</span>
								))}
							</div>
						)}

						<!-- 读书笔记链接提示 -->
						{isBookPost && (
							<div class="mt-2 text-center">
								<a href={item.url} class="text-xs text-link hover:text-accent transition-colors">
									阅读完整笔记 →
								</a>
							</div>
						)}
					</div>
				</div>
			);
		})}
	</div>

	<!-- 查看更多 -->
	<div class="mt-6 text-center">
		<a
			href="/recommendations/"
			class="hanbayu-link-hover inline-flex items-center"
		>
			查看更多推荐
			<Icon name="mdi:arrow-right" class="ml-1 h-4 w-4" />
		</a>
	</div>
</section>
